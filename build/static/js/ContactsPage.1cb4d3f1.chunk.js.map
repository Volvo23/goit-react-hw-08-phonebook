{"version":3,"sources":["components/AddContact/AddContact.module.css","components/OneContact/OneContact.module.css","components/FilterContacts/FilterConatcts.module.css","redux/selectors/phoneSelector.js","components/Alert/Alert.js","components/AddContact/AddContact.js","redux/operation/phoneOperations.js","components/OneContact/OneContact.js","components/AllContacts/AllContacts.js","components/FilterContacts/FilterContacts.js","pages/contactsPage/ContactsPage.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getError","error","getVisibleContacts","createSelector","item","name","toLowerCase","includes","Alert","message","className","initState","number","alert","Phonebook","useState","setState","useSelector","dispatch","useDispatch","changeHandler","e","target","value","prevState","styles","form","autoComplete","onSubmit","preventDefault","contact","length","alertMessage","some","cont","a","addContactRequest","axios","post","process","response","addContactSuccess","id","data","addContactError","inputName","color","type","placeholder","onChange","inputNumber","buttonAddContacts","CSSTransition","in","classNames","onEntered","timeout","unmountOnExit","OneContact","userDeleteHandler","listItem","contactName","contactNumber","deleteButton","data-id","onClick","AllContacts","event","dataset","removeContactRequest","delete","then","removeContactSuccess","removeContactError","removeContact","setFilter","TransitionGroup","component","map","FilterContacts","wrapper","ContactsPage","useEffect","fetchContactsRequest","get","Object","keys","key","fetchContactsSuccess","fetchContactsError","appear","AddContact"],"mappings":"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","file":"static/js/ContactsPage.1cb4d3f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__1rNQm\",\"inputName\":\"AddContact_inputName__11-l0\",\"inputNumber\":\"AddContact_inputNumber__BgyQ5\",\"buttonAddContacts\":\"AddContact_buttonAddContacts__EB6KZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"OneContact_listItem__e10JL\",\"contactName\":\"OneContact_contactName__2Yuw9\",\"contactNumber\":\"OneContact_contactNumber__1CjcK\",\"deleteButton\":\"OneContact_deleteButton__QHIFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilterConatcts_wrapper__7SEPh\",\"inputName\":\"FilterConatcts_inputName__CCGGO\",\"filter\":\"FilterConatcts_filter__1jnjB\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getError = (state) => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) =>\n    items.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import React from \"react\";\nimport \"./Alert.css\";\n\nconst Alert = ({ message }) => {\n  return <div className=\"alert\">{message}</div>;\n};\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/operation/phoneOperations\";\nimport { getContacts } from \"../../redux/selectors/phoneSelector\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styles from \"./AddContact.module.css\";\nimport Alert from \"../Alert/Alert\";\n\nconst initState = {\n  name: \"\",\n  number: \"\",\n  alert: false,\n};\n\nconst Phonebook = () => {\n  const [state, setState] = useState({ ...initState });\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = state;\n\n    if (!name || !number) {\n      return setState((prevState) => ({\n        ...prevState,\n        alert: true,\n        alertMessage: \"Please enter name and number!\",\n      }));\n    }\n    if (name.length < 2 || number.length < 2) {\n      return setState((prevState) => ({\n        ...prevState,\n        alert: true,\n        alertMessage: \"Please enter correct name and number!\",\n      }));\n    }\n    contacts.some((cont) => cont.name.toLowerCase() === name.toLowerCase())\n      ? setState((prevState) => ({\n          ...prevState,\n          alert: true,\n          alertMessage: `${name} is already in contacts!`,\n        }))\n      : dispatch(addContact({ name, number }));\n\n    setState((prevState) => ({ ...prevState, name: \"\", number: \"\" }));\n  };\n\n  return (\n    <>\n      <form className={styles.form} autoComplete=\"off\" onSubmit={submitHandler}>\n        <input\n          className={styles.inputName}\n          color=\"blue\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Full Name\"\n          value={state.name}\n          onChange={changeHandler}\n        ></input>\n        <input\n          className={styles.inputNumber}\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"Nubmer xxx-xx-xx\"\n          value={state.number}\n          onChange={changeHandler}\n        ></input>\n        <button type=\"submit\" className={styles.buttonAddContacts}>\n          Add contacts?\n        </button>\n      </form>\n      <CSSTransition\n        in={state.alert}\n        classNames=\"alert\"\n        onEntered={() =>\n          setState((prevState) => ({ ...prevState, alert: false }))\n        }\n        timeout={3000}\n        unmountOnExit\n      >\n        <Alert message={state.alertMessage} />\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default Phonebook;\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n} from \"../actions/phoneAction\";\n\nexport const addContact = (contact) => async (dispatch) => {\n  dispatch(addContactRequest());\n  try {\n    const response = await axios.post(\n      `${process.env.REACT_APP_BASE_URL}/contacts.json`,\n      contact\n    );\n    dispatch(addContactSuccess({ ...contact, id: response.data.name }));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n  try {\n    const response = await axios.get(\n      `${process.env.REACT_APP_BASE_URL}/contacts.json`\n    );\n    const contacts = response.data\n      ? Object.keys(response.data).map((key) => ({\n          ...response.data[key],\n          id: key,\n        }))\n      : [];\n    dispatch(fetchContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\nexport const removeContact = (id) => (dispatch) => {\n  dispatch(removeContactRequest());\n  try {\n    axios\n      .delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`)\n      .then(() => dispatch(removeContactSuccess(id)));\n  } catch (error) {\n    dispatch(removeContactError(error));\n  }\n};\n// export const addContact = (contact) => (dispatch) => {\n//   dispatch(addContactRequest());\n//   axios\n//     .post(\"/contacts\", contact)\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\n//     .catch((error) => dispatch(addContactError(error)));\n// };\n// export const fetchContacts = () => (dispatch) => {\n//   dispatch(fetchContactsRequest());\n//   axios\n//     .get(\"/contacts\")\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//     .catch((error) => dispatch(fetchContactsError(error)));\n// };\n\n// export const removeContact = (id) => (dispatch) => {\n//   dispatch(removeContactRequest());\n//   axios\n//     .delete(`/contacts/${id}`)\n//     .then(() => dispatch(removeContactSuccess(id)))\n//     .catch((error) => dispatch(removeContactError(error)));\n// };\n\n// REACT_APP_BASE_URL = https://authorization-4a986-default-rtdb.firebaseio.com\n","import React from \"react\";\nimport styles from \"./OneContact.module.css\";\n\nconst OneContact = ({ contact: { id, name, number }, userDeleteHandler }) => {\n  return (\n    <li className={styles.listItem}>\n      <p className={styles.contactName}>{name}</p>\n      <p className={styles.contactNumber}>{number}</p>\n      <button\n        className={styles.deleteButton}\n        data-id={id}\n        onClick={userDeleteHandler}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default OneContact;\n","import React from \"react\";\nimport OneContact from \"../OneContact/OneContact\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter } from \"../../redux/actions/phoneAction\";\nimport { removeContact } from \"../../redux/operation/phoneOperations\";\nimport { getVisibleContacts } from \"../../redux/selectors/phoneSelector\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport \"./AllContacts.css\";\n\nconst AllContacts = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const userDeleteHandler = (event) => {\n    const { id } = event.target.dataset;\n    dispatch(removeContact(id));\n    dispatch(setFilter(\"\"));\n  };\n\n  return (\n    <TransitionGroup component=\"ul\" className=\"wrapper\">\n      {contacts.map((contact) => (\n        <CSSTransition key={contact.id} timeout={250} classNames=\"listItem\">\n          <OneContact contact={contact} userDeleteHandler={userDeleteHandler} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nexport default AllContacts;\n","import React from \"react\";\nimport styles from \"./FilterConatcts.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors/phoneSelector\";\nimport { setFilter } from \"../../redux/actions/phoneAction\";\n\nconst FilterContacts = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeHandler = (event) => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.inputName}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Enter name\"\n        onChange={changeHandler}\n        className={styles.filter}\n      ></input>\n    </div>\n  );\n};\n\nexport default FilterContacts;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddContact from \"../../components/AddContact/AddContact\";\nimport AllContacts from \"../../components/AllContacts/AllContacts\";\nimport FilterContacts from \"../../components/FilterContacts/FilterContacts\";\nimport Alert from \"../../components/Alert/Alert\";\nimport { fetchContacts } from \"../../redux/operation/phoneOperations\";\nimport { getContacts, getError } from \"../../redux/selectors/phoneSelector\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"phonebook-title\"\n        timeout={500}\n        unmountOnExit\n      >\n        <h1>Phonebook</h1>\n      </CSSTransition>\n\n      <AddContact />\n\n      <CSSTransition\n        in={contacts.length > 1}\n        classNames=\"filter\"\n        timeout={250}\n        unmountOnExit\n      >\n        <FilterContacts />\n      </CSSTransition>\n\n      <AllContacts />\n\n      {error && <Alert message={error.message} />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}